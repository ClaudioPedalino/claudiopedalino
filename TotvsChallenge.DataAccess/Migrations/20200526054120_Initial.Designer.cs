// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TotvsChallenge.DataAccess;

namespace TotvsChallenge.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200526054120_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TotvsChallenge.Entities.Change", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountToReturn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("B10")
                        .HasColumnType("int");

                    b.Property<int?>("B100")
                        .HasColumnType("int");

                    b.Property<int?>("B20")
                        .HasColumnType("int");

                    b.Property<int?>("B50")
                        .HasColumnType("int");

                    b.Property<int?>("C01")
                        .HasColumnType("int");

                    b.Property<int?>("C05")
                        .HasColumnType("int");

                    b.Property<int?>("C10")
                        .HasColumnType("int");

                    b.Property<int?>("C50")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Change");
                });

            modelBuilder.Entity("TotvsChallenge.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("TotvsChallenge.Entities.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ClientPaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ChangeId");

                    b.HasIndex("ClientId");

                    b.HasIndex("PaymentTypeId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("TotvsChallenge.Entities.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("TotvsChallenge.Entities.Operation", b =>
                {
                    b.HasOne("TotvsChallenge.Entities.Change", "Change")
                        .WithMany()
                        .HasForeignKey("ChangeId");

                    b.HasOne("TotvsChallenge.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TotvsChallenge.Entities.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
